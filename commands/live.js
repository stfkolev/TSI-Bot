const TeemoJS = require('teemojs');
const request = require('request');

const { riotApi } = require('../config/config.json');
const api = TeemoJS(riotApi);

const Pagination = require('discord-paginationembed');
const { RichEmbed, MessageEmbed } = require('discord.js');

module.exports = {
    name: 'live',
    description: 'Live match information',
    
    execute(message, args) {
        let region = '';

        switch(args[0]) {
            case 'eune':
                region = 'eun1';
            break;

            case 'na':
                region = 'na1';
            break;

            case 'euw':
                region = 'euw1';
            break;

            case 'tr':
                region = 'tr1';
            break;

            default:
                message.channel.send(`The ${args[0]} region is not supported for now!`);
                break;
        }

        
        let summonerName = args.slice(1).join(' ');
        
        let summonerId = api.get(region, 'summoner.getBySummonerName', summonerName);

        let url = 'http://ddragon.leagueoflegends.com/cdn/9.3.1/data/en_US/champion.json';
        let championsJson = '';

        request({
            url: url,
            json: true,
        }, function(error, response, body){
            if(!error && response.statusCode == 200) {
                championsJson = body;
            }
        });

        
        summonerId.then(data => {
            let liveGame = api.get(region, 'spectator.getCurrentGameInfoBySummoner', data.id);

            liveGame.then(data => {
                
                if(!data) {
                    message.channel.send(`\`The summoner is not in a live game right now!\``);
                    return;
                }
                let mapName = '';
                //console.log(data);

                switch(data.mapId) {
                    case 10:
                        mapName = 'Twisted Treeline';
                        break;
                }

                let mapInfo = new RichEmbed()

                .setColor('#00ff99')
                .setTitle(`Currently playing on ${mapName}` )

                .setImage(`http://ddragon.leagueoflegends.com/cdn/9.3.1/img/map/map${data.mapId}.png`)

                .setTimestamp()
                .setFooter('Generated by The Shadow Isles Bot');

                message.channel.send(mapInfo);

                message.channel.send(`***Banned Champions***`);

                var bannedChamps = [];

                for(let banned in data.bannedChampions) {
                    for(let champion in championsJson.data) {
                        
                        if(championsJson.data[champion].key == data.bannedChampions[banned].championId) {
                            bannedChamps.push(new RichEmbed().setTitle(`${championsJson.data[champion].name}`).setImage(`http://ddragon.leagueoflegends.com/cdn/6.24.1/img/champion/${championsJson.data[champion].image.full}`))
                        }
                    }
                }

                new Pagination.Embeds()
                    .setArray(bannedChamps)
                    .setAuthorizedUsers([message.author.id])
                    .setChannel(message.channel)
                    .build();

            });
       });
    }
}